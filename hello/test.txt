1
00:00:01 --> 00:00:05
Resizable-array implementation of the List interface. Implements all optional list operations, and permits all elements, including null. 
2
00:00:06 --> 00:00:10
The size, isEmpty, get, set, iterator, and listIterator operations run in constant time. The add operation runs in amortized constant time, that is, adding n elements requires O(n) time. 
3
00:01:01 --> 00:01:05
Each ArrayList instance has a capacity. The capacity is the size of the array used to store the elements in the list. It is always at least as large as the list size. As elements are added to an ArrayList, its capacity grows automatically.
4
00:06:01 --> 00:07:05
An application can increase the capacity of an ArrayList instance before adding a large number of elements using the ensureCapacity operation. This may reduce the amount of incremental reallocation.
5
00:14:01 --> 00:15:05
Note that this implementation is not synchronized. If multiple threads access an ArrayList instance concurrently, and at least one of the threads modifies the list structurally, it must be synchronized externally.